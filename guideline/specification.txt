#KDDIウェブコミュニケーションズ　コーディングガイドライン

本ガイドラインは、WEBサイト制作を行う際の記述ルールなどを定めたものです。

##目的
本ガイドラインは、新規ページの作成や既存ページの修正・更新作業の際に、クオリティーの統一とメンテナンス性の向上を目的に作成しています。
コーディングを行うスタッフは、ガイドラインがある意味と内容をよく理解し、ガイドラインに則ったコーディングを行ってください。

————————————————————————————————————————————————————————————————————————————-

##ウェブサイト仕様について

##ディレクトリ

##コードフォーマット
インデントは半角スペースを使わず、タブを利用します。
Dreamweaver を利用している場合は、
[環境設定]→[コードフォーマット]内にあるインデントの設定を「タブ」に設定してください。
※タブは半角スペース2つ分とします

html
・body要素の子要素は字下げしないでください。
・ブラウザ表示上の文章の改行位置とHTML上のコードの改行位置を一致させてください。

/Users/aoihinuma/Desktop/スクリーンショット 2017-02-07 10.26.37.png
<body>
<div id="container">
	<div id="header">
		<h1>サイトタイトル</h1>
		<div class="contact"><a href="">お問い合わせ</a></div>
	</div>
	<div id="main">
		<div id="conts">
			<h2>ページタイトル</h2>
			<p>
				サンプルテキストサンプルテキストサンプルテキストサンプルテキスト<br>
				サンプルテキストサンプルテキスト
			</p>
			<h2>ページタイトル</h2>
			<p>サンプルテキスト</p>
			<ul>
				<li>あいうえお</li>
				<li>かきくけこ</li>
				<li>さしすせそ</li>
			</ul>
		</div>
	</div><!-- /#main -->
	<div id="footer">
		<div class="pageTop"><a href="#"></a></div>
	</div>
</div>
</body>

css
・開始の中括弧の後に改行を入れてください。
・プロパティごとに改行してください。
・プロパティはタブで字下げをしてください。このとき、タブはスペース2つ分としてください。
・プロパティの値の前に半角スペースを入てください。
・複数セレクタは見やすいように適宜改行を入れてください。
・プロパティが少なく、大量にバージョンのことなるセレクタを用意する場合は1行にまとめてください。

/Users/aoihinuma/Desktop/スクリーンショット 2017-02-07 10.26.11.png

/*------------------------------------------------------------
	アイコンクラス
------------------------------------------------------------*/
.icon01 {background-image: url(icon01.png);}
.icon02 {background-image: url(icon02.png);}
.icon03 {background-image: url(icon03.png);}
.icon04 {background-image: url(icon04.png);}
.icon05 {background-image: url(icon05.png);}
.icon06 {background-image: url(icon06.png);}
.icon07 {background-image: url(icon07.png);}
.icon08 {background-image: url(icon08.png);}
.icon09 {background-image: url(icon09.png);}
.icon10 {background-image: url(icon10.png);}



##コメントアウト
HTML

通常
<!-- コメント -->
特定要素の終わりを示す
<div id="container">
	<div class="wrap">

	</div><!-- /.wrap -->
</div><!-- /#container -->
CSS

大
/*------------------------------------------------------------
	調整用クラス
------------------------------------------------------------*/
小
/* 幅 */
JavaScript

大
/*------------------------------------------------------------
	ライトボックスの処理
------------------------------------------------------------*/
小
// ○○がtrueだったら処理停止










————————————————————————————————————————————————————————————————————————————-


##HTML

###基本ルール
・インデントには半角スペース2個分のタブを使用してください。
・通常「”」（ダブルクォート）を使います。属性値に対して「’」（シングルクォート）を使用しないでください。
・省略できる閉じタグを省略しないでください。(例えば</li>や</body>)。
・エンプティ要素（img ・ br ・ meta ・ linkなど）は最後を閉じない。
・Alt属性は必ず記述する。適切な文言がない場合はNull値とします。
・target属性は_blank指定とする


###マークアップ
・文書構造的に正しいマークアップを行なってください。
・タグ（divやspanなど）を過剰に使用したコードを書かないでください。
・コンテンツやテキストの増減で崩れない構造にしてください。


####マークアップのコツ
マークアップをするうえで最大の問題となるものがデザインです。
デザインの表現は、ときに文書構造を無視し見た目を優先します。
そういったデザインを見たままマークアップしてしまうと誤った文書構造になっていまいます。
そうならないために、マークアップの際にはデザインを無視し、目次は何か、見出しとそれに対応する文章は何か、文章は段落なのか箇条書きなのかを考えながら1サイトを1冊の本にするイメージで行なうことで正しい文書構造を考えながらマークアップすることができます。



###html5の仕様
記述は以下のように設定します。
<!doctype html>

<html lang=“ja”>
<head>
  <meta charset="utf-8">

  <title>The HTML5 Herald</title>
  <meta name="description" content="The HTML5 Herald">
  <meta name="author" content="SitePoint">

  <link rel="stylesheet" href="css/styles.css?v=1.0">

  <!--[if lt IE 9]>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script>
  <![endif]-->
</head>

<body>
  <script src="js/scripts.js"></script>
</body>
</html>



####DOCTYPE

本ガイドラインで定めるHTMLの仕様は以下の通りです。

DTD（文書型定義）：HTML5
Charset:utf-8

その為、DOCTYPEの記述は以下のようになります。
<!DOCTYPE html>

####HEAD

<head>
  <meta charset="utf-8">

  <title>The HTML5 Herald</title>
  <meta name="description" content="The HTML5 Herald">
  <meta name="keywords" content="SitePoint">
  <meta http-equiv="X-UA-Compatible" content="IE=Edge">

  <link rel="stylesheet" href="css/styles.css">

  <!--[if lt IE 9]>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script>
  <![endif]-->
</head>


#####lang要素
サイトにふさわしいlang属性（日本語サイトであれば「ja」英語サイトであれば「en」）を指定しましょう。
<html lang="ja">
  <!-- ... -->
</html>

#####title要素、meta要素（keywords、description）
ユーザビリティ、アクセシビリティ、SEOの観点から適切なものを設定します。

#####文字コード
素早く、そして簡単に適切なレンダリングがされるよう文字エンコードを宣言しましょう。こうすることで、特殊文字を使用しなくても良くなります。
<meta charset="utf-8">

#####外部リンク
HTML ファイル内は基本 HTML コードのみの記述とし、CSS や JavaScript などについては外部ファイルにします。
CSS と JavaScriptファイルの読み込み順は 「CSS」→「JavaScript」とします。
hrefとrel以外、linkに必要な属性はありません
<link rel="stylesheet" href="css/styles.css">

#####IE対応
ユーザーがIE8またはそれ以前のブラウザー対象のサイトを作っている場合、デザインがばらばらにならないようにする必要があります。
以下の条件コメントは、新しいHTML要素のスタイルが古いバージョンのIEでも適用されるようになります。

<!--[if lt IE 9]>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script>
<![endif]-->







————————————————————————————————————————————————————————————————————————————




##命名規則
HTMLファイル、画像ファイル及びCSS（ID及びCLASSセレクタ）の名前の付け方は以下を基本ルールとします。

1.半角英数字のみを使用してください。
2.記号は「-」（ハイフン）、「_」（アンダースコア）のみ使用してください。
3.全角スペース、半角スペースは使用しないでください。
4.機種依存文字の使用を禁止します。
5.数字や記号から開始しないでください。

ファイル名の区切りを「_」（アンダースコア）、id・class名をローワーキャメル方式（2つ目以降の単語の頭文字を大文字にする方式※）に統一します。

※NG例
テキストファイル.gif
\\text.gif
img　text
500px





###HTMLファイル
ファイル名から何のページか推測出来る英単語や慣例的に使われている名前にしてください。
ファイル名が長くなりすぎてしまう場合は、単語を1～2個に絞ってください。
その場合「_」（アンダーバー）で単語をつなげてください。


###画像

「ページ名」_「位置」_「要素（必須）」_
<1>		<2>		<3>
「詳細」_「番号(連番)」_「状態」.「拡張子」
<4>		<5>		<6>


####「ページ名」
どのページで使用しているかを判断するために付けます。
ただし、画像フォルダがページごとに分かれている場合不要です。

例）
画像フォルダがそのページのみに使用されている場合
index_news_bnr01.png

画像フォルダが複数ページに使用されている場合(/img/index/)
news_bnr01.png



####「位置」
どの部分で使用しているかを判断するために付けます。
例）
ヘッダーで使用している背景の場合
header_bg01.png

よく使う「位置」一覧
ページ全体	container
ヘッダー	header
サイドバー	side
フッター	footer
メインコンテンツ	main
サブコンテンツ	sub
検索ボックス	search
ニュース	news
お知らせ	info
お問い合わせ	contact
次へ	next
前へ	prev
リスト	list
注釈	notes
ogイメージ　og


####「要素」
どんな種類の画像なのかを判断するために付けます。
例）
ヘッダーで使用しているボタンの場合
header_btn_over.png

「要素」一覧
画像、図、写真	img,photo
サムネイル	thumb
バナー	bnr
ボタン	btn
ロゴ	logo
ナビ	nav
見出し	h
テキスト	txt
アイコン	icon
背景	bg
矢印	arrow
線	line
ページトップ	pagetop


####「詳細」
3の「要素」に対して詳細な説明が必要な場合のみ付けます。
詳細が長くなりすぎてしまう場合は、特徴的な単語を抜き出しても構いません。
例）
リセットするボタンの場合
btn_reset.png
kwcのロゴの場合
logo_kwc.png
リセットするボタンの場合


####「番号」
同じ用途の画像が複数あった場合に、
連番で番号を付けて分けます。
連番は2桁でつけるようにします。
例）
フッターで使用するバナーAの場合
footer_bnr01.jpg

「状態」
ロールオーバーやカレントなどの、状態を表す必要がある際に付けます。
例）
ロールオーバー：○○_over.png、〇〇_hover.png
選択状態　：○○_selected.png



###id・class名の付け方
id・class名はその名前からページ上のどこに使われているのか推測出来るものにしてください。
例えば#headerというID名の場合、ページ上のヘッダー部分に使われているだろうということが推測できます。
なお、コンテンツ特有のIDが必要な場合はコンテンツ名を英語に翻訳したIDになります。
このとき、文字数が多すぎるとコードが読みにくくなるため、特徴的な単語を抜き出しても構いません。

###id・class名の使い分け

####id
1.ヘッダー・フッター・メインコンテンツ・サイドバーなど大枠のレイアウトワイヤースタイル
2.恒久的にページで唯一となるコンテンツのスタイル
3.ページ内で「章」にあたるコンテンツの最上位階層の要素
4.ページ内アンカーの対象となる要素

####class
1.サイト共通のスタイル
2.IDに当てはまらない全てのスタイル

